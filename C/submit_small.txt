#!/bin/env bash


#SBATCH --array=0-1979   ## 6*11*30 - 1
#SBATCH --job-name=RCQuThreads

#SBATCH --time=100:00:00
#SBATCH --output=ThreadingOutput.txt
#SBATCH --mem=60Gb
#SBATCH --reservation=nqit
#SBATCH --nodes=1
#SBATCH --cpus-per-task=16


##    PARAMETER FETCHING CODE
## parameter value arrays
numThreadsValues=( 3 5 6 7 9 10 11 12 13 14 15 )
circuitDepthValues=( 10 20 30 40 50 60 70 80 90 100 )
numQubitsValues=( 30 ) ## ($(seq 1 30))

## parameter array lengths
numThreadsLen=${#numThreadsValues[@]}
circuitDepthLen=${#circuitDepthValues[@]}
numQubitsLen=${#numQubitsValues[@]}

## trial indices
trialNum=${SLURM_ARRAY_TASK_ID}
numThreadsTrialInd=$(( (trialNum % (numThreadsLen*circuitDepthLen*numQubitsLen)) / (circuitDepthLen*numQubitsLen) ))
circuitDepthTrialInd=$(( (trialNum % (circuitDepthLen*numQubitsLen)) / numQubitsLen ))
numQubitsTrialInd=$(( (trialNum % numQubitsLen) ))

## trial parameters
numThreads=${numThreadsValues[numThreadsTrialInd]}
circDepth=${circuitDepthValues[circuitDepthTrialInd]}
numQubits=${numQubitsValues[numQubitsTrialInd]}
numRepetitions=50
platform="ARC"
framework="QuEST"
filename="benchmark_results/${platform}_${framework}/threads${numThreads}/depth${circDepth}/qubits${numQubits}.txt"

## load anaconda environment
source ../../prep.sh

## setup
export OMP_NUM_THREADS=$numThreads
export OMP_PROC_BIND=spread

## C is dumb
mkdir -p $filename   ## makes dir and file
rm -r $filename      ## removes file, keeps dir

## start job
./RandomCircuitBenchmarker $platform $framework $filename $numThreads $circDepth $numQubits $numRepetitions
